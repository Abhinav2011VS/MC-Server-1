name: Deploy Minecraft Server

on:
  push:
    branches:
      - master

jobs:
  start-server:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget screen jq

      - name: Verify Java Installation
        run: java -version
        
      - name: Start Minecraft Server
        run: |
          echo "Starting Minecraft server..."
          
          # Start the server with optimized flags for performance
          screen -dmS minecraft_server $JAVA_HOME/bin/java -Xmx12G -XX:+UseG1GC -XX:+ParallelRefProcEnabled -XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+DisableExplicitGC -XX:+AlwaysPreTouch -XX:G1NewSizePercent=30 -XX:G1MaxNewSizePercent=40 -XX:G1HeapRegionSize=8M -XX:G1ReservePercent=20 -XX:G1HeapWastePercent=5 -XX:G1MixedGCCountTarget=4 -XX:InitiatingHeapOccupancyPercent=15 -XX:G1MixedGCLiveThresholdPercent=90 -XX:G1RSetUpdatingPauseTimePercent=5 -XX:SurvivorRatio=32 -XX:+PerfDisableSharedMem -XX:MaxTenuringThreshold=1 -Daikars.new.flags=true -Dusing.aikars.flags=https://mcutils.com -jar server.jar --nogui &
          # Wait a bit to ensure the server is running
          sleep 15
          # Save server state periodically
          nohup bash -c 'while true; do
            echo "Saving server..."
            screen -S minecraft_server -p 0 -X stuff "save-all flush\n"
            sleep 5  # Wait a moment for the server to save
            echo "Server saved!"
            # Check for changes before committing
            if ! git diff --quiet; then
              # If there are changes, stage and commit them
              git add --all
              git commit -m "Auto-update server changes after save" || echo "Git commit failed"
              
              # Push changes
              for i in {1..3}; do
                git push -f && break || { echo "Push failed, retrying... ($i)"; sleep 5; }
              done || echo "Push failed after multiple attempts"
            else
              echo "No changes to commit."
            fi
            sleep 120  # Save every 2 minutes
          done' &
          # Wait for the server to run for a set duration (e.g., 5 hours)
          sleep 18000
          echo "Stopping Minecraft server..."
          # Notify users before stopping
          for i in {60..1}; do
            screen -S minecraft_server -p 0 -X stuff "say Server will restart in $i seconds\n"
            sleep 1
          done
          screen -S minecraft_server -p 0 -X stuff "say Server restarting...\n"
          # Stop the server gracefully
          screen -S minecraft_server -p 0 -X stuff "stop\n"
          sleep 30
          # Pull latest changes before final commit
          echo "Pulling latest changes..."
          git fetch origin master && git reset --hard origin/master || { echo "Fetch failed, skipping..."; true; }
          # Final commit to capture all changes if there are any
          if ! git diff --quiet; then
            git add --all
            git commit -m "Final commit after server stop" || echo "Final commit failed"
            git push -f || echo "Final git push failed"
          else
            echo "No changes to commit after server stop."
          fi
